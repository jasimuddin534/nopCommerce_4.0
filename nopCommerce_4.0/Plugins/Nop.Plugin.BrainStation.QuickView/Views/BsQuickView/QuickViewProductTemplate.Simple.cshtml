@model Nop.Plugin.BrainStation.QuickView.Models.BsQuickViewModel
@using System;
@using System.Collections.Generic;
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@using Nop.Web.Framework.UI;
@using Nop.Web.Framework;
@using Nop.Web.Framework.Mvc;
@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Core.Domain.Customers
@using Nop.Services.Catalog
@using Nop.Services.Localization;
@using Nop.Core.Domain.Media;
@inject  MediaSettings mediaSettings

@{
    //title, meta
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.ProductDetailsModel.MetaTitle) ? Model.ProductDetailsModel.MetaTitle : Model.ProductDetailsModel.Name);
    Html.AddMetaDescriptionParts(Model.ProductDetailsModel.MetaDescription);
    Html.AddMetaKeywordParts(Model.ProductDetailsModel.MetaKeywords);

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var productUrl = Url.RouteUrl("Product", new { SeName = Model.ProductDetailsModel.SeName }, this.Url.ActionContext.HttpContext.Request.Scheme);
        Html.AddCanonicalUrlParts(productUrl);
    }
    var storeLocation = EngineContext.Current.Resolve<IStoreContext>().CurrentStore.Url;

}
@{
    var product = EngineContext.Current.Resolve<Nop.Services.Catalog.IProductService>().GetProductById(Model.ProductDetailsModel.Id);
    Model.ProductDetailsModel.AddToCart.DisableBuyButton = Model.ProductDetailsModel.AddToCart.DisableBuyButton || product.StockQuantity < 1;
}
<div data-productid="@Model.ProductDetailsModel.Id" class="quick-view-product-details-modal" id="quick-view-product-details-modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">

                <div class="product-essential">
                    @await Html.PartialAsync("BsQuickView/_QucikViewProductDetailsPictures", Model.ProductDetailsModel)
                    <div class="overview">
                        <form asp-route="Product" asp-route-sename="@Model.ProductDetailsModel.SeName" method="post" id="product-details-form">
                            <div class="product-name">
                                <h1 itemprop="name">
                                    @Model.ProductDetailsModel.Name
                                </h1>
                            </div>

                            <!--product manufacturers-->
                            @await Html.PartialAsync("BsQuickView/_QuickViewProductManufacturers", Model.ProductDetailsModel.ProductManufacturers)

                            <!--SKU, MAN, GTIN, vendor-->
                            @await Html.PartialAsync("BsQuickView/_QuickViewSKU_Man_GTIN_Ven", Model.ProductDetailsModel)

                            <!--product reviews-->
                            @await Html.PartialAsync("BsQuickView/_QuickViewProductReviewOverview", Model.ProductDetailsModel.ProductReviewOverview)

                            <!--availability-->
                            @await Html.PartialAsync("BsQuickView/_QuickViewAvailability", Model.ProductDetailsModel)

                    
                            <!--delivery Info Shipping-->
                            @await Html.PartialAsync("BsQuickView/_QuickViewDeliveryInfoShipping", Model.ProductDetailsModel)

                           
                            <!--Price-->
                            @{
                                var dataDictPrice = new ViewDataDictionary(ViewData);
                                dataDictPrice.TemplateInfo.HtmlFieldPrefix = string.Format("price_{0}", Model.ProductDetailsModel.Id);
                                @await Html.PartialAsync("BsQuickView/_QuickViewProductPrice", Model.ProductDetailsModel.ProductPrice, dataDictPrice)
                            }
                            
                            <!--delivery date-->
                            @await Html.PartialAsync("BsQuickView/_QucikViewDeliveryInfo", Model.ProductDetailsModel)

                            <!--attributes-->
                            @{
                                var dataDictAttributes = new ViewDataDictionary(ViewData);
                                dataDictAttributes.TemplateInfo.HtmlFieldPrefix = string.Format("attributes_{0}", Model.ProductDetailsModel.Id);
                                @await Html.PartialAsync("BsQuickView/_QuickViewProductAttributes", Model.ProductDetailsModel.ProductAttributes, dataDictAttributes)
                            }
                            <!--gift card-->
                            @{
                                var dataDictGiftCard = new ViewDataDictionary(ViewData);
                                dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = string.Format("giftcard_{0}", Model.ProductDetailsModel.Id);
                                @await Html.PartialAsync("BsQuickView/_QuickViewGiftCardInfo", Model.ProductDetailsModel.GiftCard, dataDictGiftCard)
                            }



                            <!-- add to cart-->
                            @{
                                var dataDictAddToCart = new ViewDataDictionary(ViewData);
                                dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", Model.ProductDetailsModel.Id);
                                @await Html.PartialAsync("BsQuickView/_QuickViewAddToCart", Model.ProductDetailsModel.AddToCart, dataDictAddToCart)
                            }

                            <!--Seller/Vendor info-->
                            @await Html.PartialAsync("BsQuickView/_QuickViewProductVendor", Model.ProductDetailsModel)

                            

                            @await Html.PartialAsync("BsQuickView/_QuickViewShareButton", Model.ProductDetailsModel)

                            @*}*@
                        </form>

                    </div>
                </div>


              <div>
                  @Html.Raw(Model.ProductDetailsModel.FullDescription)
              </div>
                @await Component.InvokeAsync("ProductsAlsoPurchased", new { productId = Model.ProductDetailsModel.Id })
                @await Component.InvokeAsync("RelatedProducts", new { productId = Model.ProductDetailsModel.Id })

            </div>
        </div>
    </div>
</div>
