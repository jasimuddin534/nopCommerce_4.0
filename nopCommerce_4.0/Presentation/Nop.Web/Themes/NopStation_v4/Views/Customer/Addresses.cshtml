@model CustomerAddressListModel
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-address-list-page");
}
@section left
    {
    @await Component.InvokeAsync("CustomerNavigation", new { selectedTabId = CustomerNavigationEnum.Addresses })
}
@section heading {
    <div class="page-title">
        <h2 class="text-white text-uppercase">@T("Account.MyAccount") - @T("Account.CustomerAddresses")</h2>
    </div>
}
<div class="page account-page address-list-page">
    <div class="theme-box-shadow bg-white p-3 px-4">
        <div class="page-body">
            <nop-antiforgery-token />

            @if (Model.Addresses.Count > 0)
            {
                <div class="address-list">
                    <div class="row">
                        @for (var i = 0; i < Model.Addresses.Count; i++)
                        {
                            var address = Model.Addresses[i];
                            var address_number = @i + 1;

                            <div class="col-lg-6">
                                <div class="section address-item theme-border bg-white mb-3 p-3">
                                    <div class="title">
                                        <strong>@address_number . @address.FirstName @address.LastName</strong>
                                    </div>
                                    <ul class="info list-unstyled ml-2">
                                        <li class="name">
                                            <label>Full Name:</label>
                                            @address.FirstName @address.LastName
                                        </li>
                                        <li class="email">
                                            <label>@T("Address.Fields.Email"):</label>
                                            @address.Email
                                        </li>
                                        @if (address.PhoneEnabled)
                                        {
                                            <li class="phone">
                                                <label>@T("Address.Fields.PhoneNumber"):</label>
                                                @address.PhoneNumber
                                            </li>
                                        }
                                        @if (address.FaxEnabled)
                                        {
                                            <li class="fax">
                                                <label>@T("Address.Fields.FaxNumber"):</label>
                                                @address.FaxNumber
                                            </li>
                                        }
                                        @if (address.CompanyEnabled && !string.IsNullOrEmpty(address.Company))
                                        {
                                            <li class="company">@address.Company</li>
                                        }
                                        @if (address.StreetAddressEnabled)
                                        {
                                            <li class="address1">
                                                <strong> @T("Address.Fields.Address1"):</strong>
                                                @address.Address1
                                            </li>
                                        }
                                        @if (address.StreetAddress2Enabled && !string.IsNullOrEmpty(address.Address2))
                                        {
                                            <li class="address2">
                                                <strong> @T("Address.Fields.Address2"):</strong>
                                                @address.Address2
                                            </li>
                                        }
                                        @if (address.CityEnabled || address.StateProvinceEnabled || address.ZipPostalCodeEnabled)
                                        {
                                            var cityStateZip = "";
                                            if (address.CityEnabled)
                                            {
                                                cityStateZip = address.City;
                                                if (address.StateProvinceEnabled || address.ZipPostalCodeEnabled)
                                                {
                                                    cityStateZip += ",";
                                                }
                                            }
                                            if (address.StateProvinceEnabled)
                                            {
                                                if (!string.IsNullOrEmpty(cityStateZip))
                                                {
                                                    cityStateZip += " ";
                                                }
                                                cityStateZip += address.StateProvinceName;
                                            }
                                            if (address.ZipPostalCodeEnabled)
                                            {
                                                if (!string.IsNullOrEmpty(cityStateZip))
                                                {
                                                    cityStateZip += " ";
                                                }
                                                cityStateZip += address.ZipPostalCode;
                                            }

                                            <li class="city-state-zip">
                                                <strong> City :</strong>
                                                @cityStateZip
                                            </li>
                                        }
                                        @if (address.CountryEnabled && !string.IsNullOrEmpty(address.CountryName))
                                        {
                                            <li class="country">
                                                @address.CountryName
                                            </li>
                                        }
                                        @if (!string.IsNullOrEmpty(address.FormattedCustomAddressAttributes))
                                        {
                                            <li class="custom-attributes-view">
                                                @Html.Raw(address.FormattedCustomAddressAttributes)
                                            </li>
                                        }
                                    </ul>
                                    <div class="buttons">
                                        <input type="button" class="theme-button sm-button edit-address-button d-inline-block mr-2" onclick="location.href = '@(Url.RouteUrl("CustomerAddressEdit", new {addressId = address.Id}))'" value="@T("Common.Edit")" />
                                        <input type="button" class="theme-button sm-button delete-address-button d-inline-block" onclick="deletecustomeraddress(@(address.Id))" value="@T("Common.Delete")" />
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <script type="text/javascript" asp-location="Footer">
                function deletecustomeraddress(addressId) {
                    if (confirm('@T("Admin.Common.AreYouSure")')) {
                        var postData = {
                            addressId: addressId
                        };
                        addAntiForgeryToken(postData);

                        $.ajax({
                            cache: false,
                            type: 'POST',
                            url: '@Url.Action("AddressDelete", "Customer")',
                            data: postData,
                            dataType: 'json',
                            success: function(data) {
                                location.href = data.redirect;
                            },
                            error: function(xhr, ajaxOptions, thrownError) {
                                alert('Failed to delete');
                            }
                        });
                    }
                }
                    </script>

                </div>
            }
            else
            {
                <div class="no-data">
                    @T("Account.CustomerAddresses.NoAddresses")
                </div>
            }
            <div class="add-button">
                <input type="button" class="add-address-button theme-button mx-auto" onclick="location.href='@Url.RouteUrl("CustomerAddressAdd")'" value="@T("Common.AddNew")" />
            </div>
        </div>
    </div>
</div>