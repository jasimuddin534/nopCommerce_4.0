@model NewsItemListModel
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(T("PageTitle.NewsArchive").Text);
    //page class
    Html.AppendPageCssClassParts("html-news-list-page");
}
@section heading {
    <div class="page-title">
        <h1 class="text-white text-uppercase">@T("News")</h1>
    </div>
}
    <div class="page news-list-page">
        <div class="theme-box-shadow p-3 px-4">
            <div class="text-right">
                <a href="@Url.RouteUrl("NewsRSS", new { languageId = Model.WorkingLanguageId })" class="link-rss" title="@T("News.RSS.Hint")">@T("News.RSS")</a>
            </div>
            <div class="page-body">
                @await Component.InvokeAsync("Widget", new { widgetZone = "newslist_page_before_items" })
                <div class="news-items">
                    @foreach (var item in Model.NewsItems)
                    {
                        <div class="news-item theme-border p-3 mb-3">
                            <div class="news-head d-sm-flex justify-content-between">
                                <h3><a class="news-title" href="@Url.RouteUrl("NewsItem", new { SeName = item.SeName })">@item.Title</a></h3>
                                <span class="news-date">-@item.CreatedOn.ToString("D")</span>
                            </div>
                            <div class="news-body">
                                @Html.Raw(item.Short)
                            </div>
                            <div class="buttons">
                                <a href="@Url.RouteUrl("NewsItem", new { SeName = item.SeName })" class="read-more text-blue">@T("News.MoreInfo")</a>
                            </div>
                            @await Component.InvokeAsync("Widget", new { widgetZone = "newslist_page_inside_item", additionalData = item.Id })
                        </div>
                    }
                </div>
                @{
                    var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber");
                }
                @if (!pager.IsEmpty())
                {
                    <div class="pager">
                        @pager
                    </div>
                }
                @await Component.InvokeAsync("Widget", new { widgetZone = "newslist_page_after_items" })
            </div>
        </div>
    </div>
