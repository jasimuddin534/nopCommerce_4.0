@model TopMenuModel
<nav class="navbar navbar-expand-lg navbar-light light-color scrolling-navbar wow fadeInUp">

   
            @await Component.InvokeAsync("Logo")
        

    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <i class="fa fa-bars" aria-hidden="true"></i>
    </button>
    <div class="collapse navbar-collapse text-uppercase" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">

            @await Component.InvokeAsync("Widget", new { widgetZone = "header_menu_before" })
            @if (Model.DisplayHomePageMenuItem)
            {
                <li class="nav-item"><a class="nav-link" href="@Url.RouteUrl("HomePage")">@T("HomePage")</a></li>
            }
            @{
                var rootCategories = Model.Categories.Where(x => x.IncludeInTopMenu).ToList();
            }
            @foreach (var category in rootCategories)
            {
                var categoryLineModel = new TopMenuModel.CategoryLineModel
                {
                    Category = category
                };
                @await Html.PartialAsync("_CategoryLine.TopMenu", categoryLineModel)
            }
            @foreach (var topic in Model.Topics)
            {
                <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
            }
            @if (Model.NewProductsEnabled && Model.DisplayNewProductsMenuItem)
            {
                <li><a href="@Url.RouteUrl("NewProducts")">@T("Products.NewProducts")</a></li>
            }
            @if (Model.DisplayProductSearchMenuItem)
            {
                <li><a href="@Url.RouteUrl("ProductSearch")">@T("Search")</a></li>
            }
            @if (Model.DisplayCustomerInfoMenuItem)
            {
                <li ><a href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a></li>
            }
            @if (Model.BlogEnabled && Model.DisplayBlogMenuItem)
            {
                <li ><a href="@Url.RouteUrl("Blog")">@T("Blog")</a></li>
            }
            @if (Model.ForumEnabled && Model.DisplayForumsMenuItem)
            {
                <li ><a href="@Url.RouteUrl("Boards")">@T("Forum.Forums")</a></li>
            }
            @if (Model.DisplayContactUsMenuItem)
            {
                <li ><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
            }
            @await Component.InvokeAsync("Widget", new { widgetZone = "header_menu_after" })
        </ul>
        <ul class="navbar-nav nav-flex-icons">
            @await Component.InvokeAsync("HeaderLinks")
            <li class="nav-item search_box">
                <a data-toggle="modal" data-target="#basicExampleModal" class="nav-link"><i class="fa fa-search"></i></a>
            </li>
        </ul>
    </div>

</nav>



    <script type="text/javascript" asp-location="Footer">
        $(document).ready(function () {
            $('.menu-toggle').click(function () {
                $(this).siblings('.top-menu.mobile').slideToggle('slow');
            });
            $('.top-menu.mobile .sublist-toggle').click(function () {
                $(this).siblings('.sublist').slideToggle('slow');
            });
        });
    </script>
