@model LoginModel
@using System.Net
@using Nop.Core
@inject IWebHelper webHelper
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(T("PageTitle.Login").Text);

    //page class
    Html.AppendPageCssClassParts("html-login-page");

    //register URL with return URL (if specified)
    var registerUrl = Url.RouteUrl("Register");
    if (!string.IsNullOrEmpty(this.Context.Request.Query["returnUrl"]))
    {
        registerUrl = webHelper.ModifyQueryString(registerUrl, "returnurl=" + WebUtility.UrlEncode(this.Context.Request.Query["returnUrl"]), null);
    }
}
<div class="panel panel-default form-panel">
    <div class="panel-heading">
        <h3>@T("Account.Login.Welcome")</h3>
    </div>
    @await Html.PartialAsync("_ExternalAuthentication.Errors")
    <div class="panel-body">
        <div class="row">
            <div class="col-md-6">
                @if (Model.CheckoutAsGuest)
                {
                    <div class="title mid-content-title">
                        <strong>@T("Account.Login.CheckoutAsGuestOrRegister")</strong>
                    </div>
                    <div class="offer offer-default">
                        <div class="text">
                            @await Component.InvokeAsync("TopicBlock", new { systemName = "CheckoutAsGuestOrRegister" })
                        </div>
                        <div class="buttons">
                            <input type="button" class="button-1 checkout-as-guest-button btn btn-default" onclick="location.href='@Url.RouteUrl("Checkout")'" value="@T("Account.Login.CheckoutAsGuest")" />
                            <input type="button" class="button-1 register-button btn btn-default" onclick="location.href='@registerUrl'" value="@T("Account.Register")" />
                        </div>
                    </div>
                }
                else
                {
                    <div class="title mid-content-title">
                        <strong>@T("Account.Login.NewCustomer")</strong>
                    </div>
                    <div class="offer offer-default">
                        <div class="text">
                            @T("Account.Login.NewCustomerText")
                        </div>
                        <div class="buttons">
                            <input type="button" class="button-1 register-button btn btn-default" onclick="location.href='@registerUrl'" value="@T("Account.Register")" />
                        </div>
                    </div>
                    
                }
            </div>
            <div class="col-md-6">
                <div class="title mid-content-title">
                    <strong>@T("Account.Login.ReturningCustomer")</strong>
                </div>
                <div class="offer offer-default">
                    <div class="">
                        
                            <form asp-route="Login" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" method="post">
                        <div asp-validation-summary="ModelOnly" class="message-error text-danger">@T("Account.Login.Unsuccessful")</div>
                            <div class="text-danger">
                                @Html.ValidationSummary(true, T("Account.Login.Unsuccessful").Text)
                            </div>
                            @if (Model.UsernamesEnabled)
                            {
                                <div class="form-group row">
                                    <div class="col-md-3">
                                        <label asp-for="Username"  class="control-label" asp-postfix=":"></label>
                                      
                                       
                                    </div>    
                                    <div class="col-md-9">
                                        <input asp-for="Username" class="username form-control" autofocus="autofocus" />
                                       
                                       
                                    </div>
                                    <span asp-validation-for="Username"></span>
                                </div>
                            }
                            else
                            {
                                <div class="form-group row">
                                    <div class="col-md-3">
                                        <label asp-for="Email"  class="control-label" asp-postfix=":"></label>
                                       
                                    </div>
                                    <div class="col-md-9">
                                        <input asp-for="Email" class="email form-control" autofocus="autofocus" />
                                       
                                       
                                    </div>
                                    <span asp-validation-for="Email"></span>
                                    
                                </div>
                            }
                            <div class="form-group row">
                                <div class="col-md-3">
                                    <label asp-for="Password"  class="control-label" asp-postfix=":"></label>
                                       
                                </div>
                                <div class="col-md-9">
                                   
                                    <input asp-for="Password" class="password form-control" autofocus="autofocus" />
                                       
                                       
                                </div>
                                <span asp-validation-for="Password"></span>
                            </div>
                            <div class="form-group reversed">
                             
                                <label asp-for="Password"  ></label>
                           
                                <span class="forgot-password">
                                    <a asp-route="PasswordRecovery">@T("Account.Login.ForgotPassword")</a>
                                </span>
                            </div>
                            @if (Model.DisplayCaptcha)
                             {
                                 <div class="captcha-box">
                                     <nop-captcha />
                                 </div>
                             }
                            <div class="buttons">
                                <input class="button-1 login-button btn btn-default" type="submit" value="@T("Account.Login.LoginButton")" />
                            </div>
                       
                            </form>
                    </div>
                </div>
            </div>
        </div>




        @await Component.InvokeAsync("ExternalMethods", "ExternalAuthentication")
        
@*@if (!String.IsNullOrEmpty(@Html.Action("ExternalMethods", "ExternalAuthentication").ToString()))
{
    <div class="row">
        <div class="col-md-12">
            <div class="external-authentication">
                <div class="offer offer-default">
                     @Html.Action("ExternalMethods", "ExternalAuthentication")  
                </div>
            </div>
        </div>
            
    </div>

}*@

         
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        @await Component.InvokeAsync("TopicBlock", new { systemName = "LoginRegistrationInfo" })
    </div>
</div>
