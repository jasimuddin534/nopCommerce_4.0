@model CatalogPagingFilteringModel.PriceRangeFilterModel
@{
    var selectedItem = Model.Items.FirstOrDefault(x => x.Selected);
}
@functions{

    public string FormatPriceRangeText(CatalogPagingFilteringModel.PriceRangeFilterItem filterItem)
    {
        var rangeText = "";
        if (string.IsNullOrWhiteSpace(filterItem.From))
        {
            rangeText = string.Format(T("Filtering.PriceRangeFilter.Under").Text, $"<span class=\"PriceRange\">{filterItem.To}</span>");
        }
        else if (string.IsNullOrWhiteSpace(filterItem.To))
        {
            rangeText = string.Format(T("Filtering.PriceRangeFilter.Over").Text, $"<span class=\"PriceRange\">{filterItem.From}</span>");
        }
        else
        {
            rangeText = $"<span class=\"PriceRange\">{filterItem.From}</span> - <span class=\"PriceRange\">{filterItem.To}</span>";
        }
        return rangeText;
    }
}
@if (Model.Enabled)
{
    <div class="panel panel-default side-nav">
        <div class="panel-heading">
            <strong>@T("Filtering.PriceRangeFilter")</strong>
        </div>
        <div class="panel-body">
            @if (selectedItem == null)
            {
                <ul class="nav">
                    @foreach (var item in Model.Items)
                    {
                        <li><a href="@item.FilterUrl">@Html.Raw(FormatPriceRangeText(item))</a> </li>
                    }
                </ul>
            }
            else
            {
                <ul class="nav">
                    <li class="disabled">
                        <a href="#">@Html.Raw(FormatPriceRangeText(selectedItem))</a>
                    </li>
                    <li>
                        <a href="@Model.RemoveFilterUrl" class="remove-price-range-filter">@T("Filtering.PriceRangeFilter.Remove")</a>
                    </li>
                </ul>
            }
        </div>

    </div>
}



