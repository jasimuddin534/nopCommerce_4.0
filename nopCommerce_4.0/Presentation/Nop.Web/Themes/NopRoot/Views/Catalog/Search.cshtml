@model Nop.Web.Models.Catalog.SearchModel
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(T("PageTitle.Search").Text);
}
@using Nop.Web.Models.Catalog;
@using Nop.Web.Extensions;

<script type="text/javascript" asp-location="Footer">
    $(document).ready(function () {
        $("#@Html.IdFor(model => model.adv)").click(toggleAdvancedSearch);
        toggleAdvancedSearch();
    });

    function toggleAdvancedSearch() {
        if ($('#@Html.IdFor(model => model.adv)').is(':checked')) {
            $('#advanced-search-block').show();
        }
        else {
            $('#advanced-search-block').hide();
        }
    }
</script>

<div class="panel panel-default form-panel">
    <div class="panel-heading">
        <h3>@T("Search")</h3>
    </div>
    <div class="panel-body">
        <div class="search-input">
            @using (Html.BeginRouteForm("ProductSearch", FormMethod.Get))
            {
                <div class="basic-search">
                    <div class="form-group row">
                        @Html.LabelFor(model => model.q, new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(model => model.q, new { @class = "form-control" })
                        </div>
                    </div>
                    @await Component.InvokeAsync("Widget", new { widgetZone = "productsearch_page_basic" })
                    <div class="form-group row reversed">
                        @Html.CheckBoxFor(model => model.adv)
                        @Html.LabelFor(model => model.adv, new { @class = "col-md-2 control-label" })
                    </div>
                </div>
                <div id="legend">
                    <legend></legend>
                </div>
                <div class="advanced-search" id="advanced-search-block">
                    @if (Model.AvailableCategories.Count > 0)
                    {
                        <div class="form-group row">
                            @Html.LabelFor(model => model.cid, new { @class = "col-md-2 control-label" })
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.cid, Model.AvailableCategories, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group row reversed">
                            <div class="col-md-8">
                                @Html.CheckBoxFor(model => model.isc)
                                @Html.LabelFor(model => model.isc)
                            </div>

                        </div>
                    }
                    @if (Model.AvailableManufacturers.Count > 0)
                    {
                        <div class="form-group row">
                            @Html.LabelFor(model => model.mid, new { @class = "col-md-2 control-label" })
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.mid, Model.AvailableManufacturers, new { @class = "form-control" })
                            </div>
                        </div>
                    }
                    <div class="form-group row">
                        <div class="col-md-2">
                            <label>@T("Search.PriceRange"):</label>
                        </div>
                        <div class="col-md-8">
                            <div class="price-range row">
                                <div class="col-md-1">@T("Search.PriceRange.From")</div>
                                <div class="col-md-3">@Html.TextBoxFor(model => model.pf, new { @class = "form-control" })</div>
                                <div class="col-md-1">@T("Search.PriceRange.To")</div>
                                <div class="col-md-3">@Html.TextBoxFor(model => model.pt, new { @class = "form-control" })</div>
                            </div>
                        </div>
                    </div>
                    <div class="inputs reversed">
                        @Html.CheckBoxFor(model => model.sid)
                        @Html.LabelFor(model => model.sid)
                    </div>
                    @await Component.InvokeAsync("Widget", new { widgetZone = "productsearch_page_advanced" })
                </div>
                <div class="buttons">
                    <input type="submit" class="button-1 search-button btn btn-default" value="@T("Search")" />
                </div>
            }
        </div>
        @if (Model.Products.Count > 0)
        {
            <div class="row">
                <div class="col-md-12">
                    <div class="product-selectors clearfix">
                        @*view mode*@
                        @if (Model.PagingFilteringContext.AllowProductViewModeChanging && Model.Products.Count > 0)
                        {
                            <div class="col-md-4 pull-text-center ">
                                <div class="row @*paging-filter*@">
                                    <div class="col-md-4 remove_right_padding">
                                        <span>@T("Catalog.ViewMode")</span>
                                    </div>

                                    <div class="col-md-5 remove_left_padding">
                                        @Html.DropDownList("products-viewmode", Model.PagingFilteringContext.AvailableViewModes, new { @class = "form-control dropdown-filter", onchange = "setLocation(this.value);" })
                                    </div>
                                </div>
                            </div>

                        }
                        @*sorting*@
                        @if (Model.PagingFilteringContext.AllowProductSorting && Model.Products.Count > 0)
                        {
                            <div class="col-md-4 pull-text-center">
                                <div class="row">
                                    <div class="col-md-4 remove_right_padding">
                                        <span>@T("Catalog.OrderBy")</span>
                                    </div>
                                    <div class="col-md-8 remove_left_padding">
                                        @Html.DropDownList("products-orderby", Model.PagingFilteringContext.AvailableSortOptions, new { @class = "form-control dropdown-filter", onchange = "setLocation(this.value);" })
                                    </div>
                                </div>
                            </div>
                        }
                        @*page size*@
                        @if (Model.PagingFilteringContext.AllowCustomersToSelectPageSize && Model.Products.Count > 0)
                        {
                            <div class="col-md-4 pull-text-center">
                                <div class="row">
                                    <div class="col-md-offset-2 col-md-3">
                                        <span>@T("Catalog.PageSize")</span>
                                    </div>
                                    <div class="col-md-3 remove_left_padding remove_right_padding">
                                        @Html.DropDownList("products-pagesize", Model.PagingFilteringContext.PageSizeOptions, new { @class = "form-control dropdown-filter", onchange = "setLocation(this.value);" })
                                    </div>
                                    <div class="col-md-4 remove_left_padding">
                                        <span>@T("Catalog.PageSize.PerPage")</span>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

        }
        <div class="search-results">
            @if (!String.IsNullOrEmpty(Model.Warning))
            {
                <div class="clearfix space10"></div>
                <strong class="alert alert-info">
                    @Model.Warning
                </strong>
            }
            @if (Model.NoResults)
            {
                <strong class="alert alert-danger">
                    @T("Search.NoResultsText")
                </strong>
            }
            @if (Model.Products.Count > 0)
            {
                
            if (Model.PagingFilteringContext.ViewMode == "list")
            {
                @*list mode*@
                <div class="product-list">

                    @foreach (var product in Model.Products)
                    {
                        <div class="row">


                            <div class="col-md-12">
                                <div class="offer offer-default">
                                    @await Html.PartialAsync("_ProductBox", product)
                                </div>
                            </div>
                        </div>


                    }
                </div>
            }
            else
            {
                @*grid mode*@
                <div class="product-grid home-page-product-grid">
                    @{
                        var pg_i = 0;
                    }
                    @foreach (var product in Model.Products)
                    {
                        if (pg_i % 3 == 0)
                        {
                            @:<div class="row box-products">
                        }

                        <div class="col-md-4">
                            <div class="offer offer-default silde-show-offer pull-text-center">
                                @await Html.PartialAsync("_ProductBox", product)
                            </div>
                        </div>
                        if (pg_i % 3 == 2)
                        {
                            @:</div>
                        }

                        pg_i++;
                    }
                    @if (pg_i % 3 != 0)
                    {
                        @:</div>
                        }

                </div>
                            }
                        }
            <div class="pager">
                @Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber").BooleanParameterName("adv").BooleanParameterName("isc").BooleanParameterName("sid")
            </div>
        </div>
    </div>
