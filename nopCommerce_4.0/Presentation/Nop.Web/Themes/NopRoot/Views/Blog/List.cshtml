@model BlogPostListModel
@using Nop.Web.Extensions;
@using Nop.Web.Models.Blogs;
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(T("PageTitle.Blog").Text);
}
@section left {
    @await Component.InvokeAsync("Widget", new { widgetZone = "left_side_column_blog_before" })
    @await Component.InvokeAsync("BlogMonths")
    @await Component.InvokeAsync("Widget", new { widgetZone = "left_side_column_after_blog_archive" })
    @await Component.InvokeAsync("BlogTags")
    @await Component.InvokeAsync("Widget", new { widgetZone = "left_side_column_blog_after" })
}
<div class="blog-page  panel panel-default form-panel">
    <div class="panel-heading">
        <div class="alignright">
            <a href="@Url.RouteUrl("BlogRSS", new { languageId = Model.WorkingLanguageId })" class="pull-right header-rss" title="@T("Blog.RSS.Hint")"><i class="fa fa-rss fa-2x header-rss-icon"></i></a>
        </div>            
        <h3>
            @if (String.IsNullOrEmpty(Model.PagingFilteringContext.Tag))
            {
                if (Model.PagingFilteringContext.GetParsedMonth().HasValue)
                {
                    @String.Format(T("Blog.FilteredByMonth").Text, Model.PagingFilteringContext.GetParsedMonth().Value.Year, Model.PagingFilteringContext.GetParsedMonth().Value.ToString("MMMM"))
                }
                else
                {
                    @T("Blog")
                }
            }
            else
            {
                @String.Format(T("Blog.TaggedWith").Text, Model.PagingFilteringContext.Tag)
            }
        </h3>
    </div>

    <div class="panel-body">
       
        <div class="blog-posts">
            @foreach (var item in Model.BlogPosts)
            {
                <div class="post">
                    <div class="post-head">
                        <div class="row">
                            <div class="col-md-8 pull-text-left">
                                <h4><a class="post-title" href="@Url.RouteUrl("BlogPost", new { SeName = item.SeName })">@item.Title</a></h4>
                            </div>
                            <div class="col-md-4 pull-text-right">                       
                                <h5><span class="post-date">@item.CreatedOn.ToString("D")</span></h5>
                            </div>
                        </div>
                    </div>
                    <div class="post-body">
                        @Html.Raw(item.Body)
                    </div>
                    @if (item.Tags.Count > 0)
                    {
                        <div class="tags">
                            <label><strong>@T("Blog.Tags"):</strong></label>
                           
                            @for (int i = 0; i < item.Tags.Count; i++)
                            {
                                var tag = item.Tags[i];
                                <a href="@Url.RouteUrl("BlogByTag", new { tag = tag })">@tag</a>
                                if (i != item.Tags.Count - 1)
                                {
                                    <span class="separator">,</span>
                                }
                            }
                            
                        </div>
                    }
                    @if (item.AllowComments)
                    {
                        <div class="blog-details">
                            <a href="@Url.RouteUrl("BlogPost", new { SeName = item.SeName })">
                                <strong> @string.Format(T("Blog.CommentsLink").Text, item.NumberOfComments)</strong>
                            </a>
                        </div>
                    }
                   
                </div>
                <legend></legend>
            }
        </div>
        <div class="pager">
            @Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber")
        </div>
        
    </div>
</div>


